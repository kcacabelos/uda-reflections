How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    viewing a diff between two versions of a file made finding the bug easier.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having easy access to the entire history of a file is more efficient due to the mass of file.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pros of saving something manually is the control, especially when it comes to major changes.
    The cons is not doing it automatically and not saving frequently enough.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Multiple files may be linked and are dependent on each others changes.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the commit logs, git diff shows the changes between each log.
    Together they make finding bugs easier.

How might using version control make you more confident to make changes that
could break something?

    using version control gives you the freedom to revert a code if something does not work as planned.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git to manage a sample portfolio.
